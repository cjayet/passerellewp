/**
 * load ajax - generic
 * @param urlArticleCible : where to post ajax
 * @param json_data : parameters
 * @param callback
 */
function getAjaxResponse(urlArticleCible, json_data, callback){

    // remove all notice blocks
    removeNodeEverywhere('.result_push_cms');

    // ajax request
    $.ajax({
        method: "POST",
        url: urlArticleCible,
        cache: false,
        dataType: "json",
        enctype: 'multipart/form-data',
        data: { data_optme: json_data },
        crossDomain: true,

        success:    function(data) {
            callback(data);
        },
        error: function(xhr, status, error) {
            if(xhr.status == 404) {
                sweetAlert("Oops...", "Error 404 not found in getAjaxResponse", "error");
            }
            else {
                var err = eval("(" + xhr.responseText + ")");

                var data = new Array();
                data['result'] = 'error';
                data['message'] = 'Ajax error --- ' + err;
                callback(data);
            }
        }
    });
}


/**
 * Remove class everywhere
 * @param classParam
 */
function removeClassEverywhere(classParam){
    $('.'+ classParam).each(function(){
        $(this).removeClass(classParam);
    })
};


/**
 * Remove all elements in DOM
 * @param idOrClass
 */
function removeNodeEverywhere(idOrClass){
    $(idOrClass).each(function(){
        $(this).remove();
    })
}


/**
 * If search engines no allowed:  noindex
 */
function setMetaRobotsIfSearchEngineDisabled( isBlogPublic ){
    if (isBlogPublic == 0){
        // noindex
        $('#easycontent-noindex').prop('checked', true);
        $('#easycontent-noindex').attr("disabled", true);

        // follow
        $('#easycontent-nofollow').prop('checked', false);
        $('#easycontent-nofollow').attr("disabled", true);

        // message
        $('#alert_no_search_engines').css('display', '');
    }
}


/**
 *
 * @param selector
 */
function loadTinyMCE(idSelector){

    var tinyMceEditor = tinymce.init({
        selector: idSelector,
        menubar: false,
        plugins: [
            'advlist autolink lists link image charmap print preview anchor',
            'searchreplace visualblocks code fullscreen',
            'insertdatetime media table contextmenu paste code'
        ],
        toolbar: 'undo redo | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent',
        content_css: '//www.tinymce.com/css/codepen.min.css'
    });
}

/**
 * Change le contenu du tinyMCE souhaité
 * @param idTinyMCE : id
 * @param content : nouveau contenu
 */
function changeTinymceContent(idTinyMCE, content){
    tinymce.get(idTinyMCE).setContent(content);
}

/**
 * Récupère le contenu du tinyMCE souhaité
 * @param idTinyMCE : id
 * @param content : nouveau contenu
 */
function getTinymceContent(idTinyMCE){
    return tinymce.get(idTinyMCE).getContent();
}
var boolContentUpdatedAndNotSaved = false;

/**
 * load "GridEditor"
 */
function loadGridEditor(){

    // remove all blocks
    removeNodeEverywhere('.result_push_cms');

    // autorise l'optimisation des images/hrefs
    setBoolContentUpdatedAndNotSaved(false);

    var form = $('#form_load_grideditor');
    var containerMsg = form.next();
    containerMsg.removeClass().html('');
    var urlArticleCible = $('#url_cible').val();

    if (urlArticleCible !== null)
    {
        // préparation requête ajax
        var tabData = {url_cible: urlArticleCible};
        tabData['action'] = 'load_post_content';
        tabData['id_post'] = $('#select_list_elements').val();
        var json_data = JSON.stringify(tabData, null, 2);

        $('#container-easycontent').css('display', 'none');

        if (tabData['id_post'] != ''){

            $('body').loading();

            // exécution ajax
            getAjaxResponse(urlArticleCible, json_data, function(msg){

                $('body').loading('stop');

                if (msg.result == 'success'){

                    $('#container-easycontent').slideDown();

                    // set common content
                    $('#easycontent-title').val(msg.title);
                    $('#easycontent-slug').val(msg.slug);
                    $('#easycontent-meta-description').val(msg.meta_description);
                    $('#easycontent-canonical-url').val(msg.url_canonical);
                    $('#easycontent-url').val(msg.url);
                    $('#easycontent-cms-link').attr('href', msg.url);

                    if (msg.blog_public == 0){
                        // moteurs de recherche bloquées dans les réglages du CMS
                        setMetaRobotsIfSearchEngineDisabled(0);
                    }
                    else {
                        // moteurs de recherche non bloqués : choix possible
                        $('#alert_no_search_engines').css('display', 'none');

                        if (msg.noindex == 1)           $('#easycontent-noindex').prop('checked', true);
                        else                            $('#easycontent-noindex').prop('checked', false);

                        if (msg.nofollow == 1)          $('#easycontent-nofollow').prop('checked', true);
                        else                            $('#easycontent-nofollow').prop('checked', false);
                    }

                    if (msg.publish == 1)           $('#easycontent-publish').prop('checked', true);
                    else                            $('#easycontent-publish').prop('checked', false);


                    // set specific content
                    if ( $('#easycontent-short_description').length ){
                        if (!msg.short_description)         msg.short_description = '';         // if 'null' set empty content
                        $('#easycontent-short_description').val(msg.short_description);
                        changeTinymceContent('easycontent-short_description', msg.short_description);
                    }


                    if ( $('#easycontent-meta-title').length ){
                        $('#easycontent-meta-title').val(msg.meta_title);
                    }

                    // initialisation de la grille de l'éditeur
                    easycontentGridInit( msg.content, false);
                }
                else {
                    // show error
                    form.append('<div class="form-group result_push_cms"><div class="alert alert-danger">'+ msg.message +'</div></div>');
                }
            })
        }
        else {
            // add message under form
            form.append('<div class="form-group result_push_cms"><div class="alert alert-danger">Veuillez choisir un contenu</div></div>');
        }

    }
    else {
        containerMsg.removeClass().addClass('alert alert-info');
        containerMsg.html('Veuillez choisir une page/article');
    }
}


/**
 * Init gridEditor for easycontent
 */
function easycontentGridInit(newContentGrid, keepContent){

    // keep previous content in editor?
    if (keepContent == true)        var contenuInitial = $('#easycontent-grid').gridEditor('getHtml');
    else                            var contenuInitial = '';

    // vide le contenu affichant la grid
    var injectContect = contenuInitial+newContentGrid;

    $('#content-grid').html('<div id="easycontent-grid">'+ injectContect +'</div>');

    // add tag for grid editor (needed, crash if not here)
    $('#content-grid .ge-content').each(function(){
        if ( !($(this).attr('data-ge-content-type') == 'tinymce')){
            $(this).attr('data-ge-content-type', 'tinymce');
        }
    })

    // init droppable
    initDraggableDroppable();

    // grid editor - set
    $('#easycontent-grid').gridEditor({
        new_row_layouts: [[12], [6,6], [9,3], [3,9], [8,4], [4,8]],
        //new_row_layouts: [],

        content_types: ['tinymce'],
        tinymce: {
            config: {
                inline: true,
                plugins: [
                    "advlist autolink lists link image charmap print preview anchor",
                    "searchreplace visualblocks code fullscreen",
                    "insertdatetime media table contextmenu responsivefilemanager paste"
                ],
                toolbar: "undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link responsivefilemanager image insertfile",
                image_advtab: true ,
                external_filemanager_path: "includes/filemanager/",
                filemanager_title: "Filemanager" ,
                external_plugins: { "filemanager" : "http://passerelle.dev/includes/filemanager/plugin.min.js"},   // TODO configuration en dur
                relative_urls:false
            }
        }

    });
}


/**
 * Insert content in grid editor
 * @param element
 * @param action
 */
function dropAction(element, action, url){

    element.removeClass('placeholderdrop');

    var generateContent = '';
    if (action == 'h1'){
        generateContent = '<h1>Title h1</h1>';
        injectDropContent(element, generateContent);
    }
    if (action == 'h2'){
        generateContent = '<h2>Title h2</h2>';
        injectDropContent(element, generateContent);
    }
    if (action == 'h3'){
        generateContent = '<h3>Title h3</h3>';
        injectDropContent(element, generateContent);
    }
    if (action == 'image'){
        if (url != '' && url !== undefined)     var urlImage = url;
        else                                    var urlImage  = 'http://placehold.it/550x150';
        generateContent = '<img src="'+ urlImage +'" alt="" style="max-width:100%; height:auto;" />';
        injectDropContent(element, generateContent);
    }
    if (action == 'content'){
        generateContent = '';
        getAjaxResponse('index.php?ajax=getLoremIpsum', $(this).attr('data-select'), function(msg) {
            if(msg.result == 'success'){
                generateContent = msg.lorem;
                injectDropContent(element, generateContent);
            }
        })
    }
}


/**
 * @param element
 * @param generateContent
 */
function injectDropContent(element, generateContent){

    setBoolContentUpdatedAndNotSaved(true);

    // inject content in the current row
    element.html('<div class="col-md-12 col-sm-12 col-xs-12 column easyContentAddRow">'+ generateContent +'</div>')

    // supprime les row qui traineraient
    removeRowsPlaceholder();

    // remet l'éditeur
    easycontentGridInit('', true);

}



/**
 *  Selection du texte + positionnement toolbar d'action
 */
function addEasycontentToolbarFromText(){
    var elem= $(this);
    var selection;

    if (window.getSelection) {
        selection = window.getSelection();
    } else if (document.selection) {
        selection = document.selection.createRange();
    }

    //selection.toString() !== '' && alert('"' + selection.toString() + '" was selected at ' + e.pageX + '/' + e.pageY);
    if (selection.toString() !== ''){

        // text selected
        var posX = parseInt(e.pageX +30);
        var posY = parseInt(e.pageY -15);

        $.get("views/blocs/js-tmpl/toolbar.html", function(data){

            // random id for toolbar
            var rand = Math.floor(Math.random() * (Math.pow(10,7))) + 1;
            data =  $.tmpl( data, {
                'toolbarid' : 'toolbar-easycontent-'+rand,
                'suggestid' : 'toolbar-suggest-'+rand
            }).html()

            $('body').append(data);
            $('#toolbar-easycontent-'+rand).css({ 'left': posX, 'top': posY });
            $('#toolbar-easycontent-'+rand).find('.glyphicon-search').attr('data-select', selection.toString())
        });
    }
};


/**
 * Search results for selected text
 */
function easycontentToolbarAction(){
    var buttonClick = $(this);
    var action = buttonClick.attr('data-action');
    if (action == 'close'){
        buttonClick.closest('.toolbar-editor').remove();
    }
    else if (action == 'search'){
        // get content and inject in suggest

        getAjaxResponse('index.php?ajax=getLoremIpsum', $(this).attr('data-select'), function(msg) {
            if(msg.result == 'success'){
                sweetAlert("Res", msg.lorem);
                // TODO ajouter le contenu en dessous et pouvoir l'injecter dans le grid editor
                //$('#toolbar-easycontent-')
            }
        })
    }
}



/**
 * Initialisation draggable & droppable
 */
function initDraggableDroppable(){

    /**
     * DRAGGABLE BUTTONS
     */
    $( ".ui-draggable" ).draggable({
        helper:"clone",
        cursor:"move",
        revertDuration:0,
        revert: true,
        refreshPositions: false,

        start: function(event, ui) {
            ui.helper.data('dropped', false);
            removeClassEverywhere('easyContentAddRow');

            // template d'une ligne permettant d'ajouter du contenu
            var htmlRowPlaceholder = '<div class="row placeholderdrop"><div class="col-md-12 col-sm-12 col-xs-12 column">&nbsp;</div></div>';

            // disable editor but keep content
            var contenuInitial = $('#easycontent-grid').gridEditor('getHtml');

            // vide le contenu affichant la grid
            $('#content-grid').html('<div id="easycontent-grid">'+contenuInitial+'</div>');

            // ajout des rows placeholder pour insérer du contenu
            if ($('#easycontent-grid .row').length == 0)
            {
                // editeur vide: ajoute une première ligne
                $('#easycontent-grid').append(htmlRowPlaceholder);
            }
            else
            {
                $('#easycontent-grid .row').each(function(i){
                    // ajoute une row au tout début
                    if (i == 0)         $(this).before(htmlRowPlaceholder);
                    $(this).after(htmlRowPlaceholder);
                });
            }

            // reinit droppable car rows ajoutées juste avant
            initDroppablePlaceholder();
        },

        stop: function(event, ui){
            if (ui.helper.data('dropped') == false){
                // drop dans une zone non acceptée : nettoie les rows placeholder ajoutées dynamiquement
                removeRowsPlaceholder();

                // remet l'éditeur
                easycontentGridInit('', true);
            }
        }
    });
};


/**
 * Droppable sur les rows placeholder temporaires
 */
function initDroppablePlaceholder(){
    $( '.placeholderdrop' ).droppable({
        accept: ".ui-draggable",
        hoverClass: "placeholderdropHover",
        tolerance: "pointer",
        drop: function (event, ui) {
            ui.helper.data('dropped', true);
            var action = $(ui.draggable).attr('data-action');
            var url = $(ui.draggable).attr('src');
            dropAction($(this), action, url);
        }
    })
};


/**
 * Nettoie le code en supprimant les rows temporaires
 */
function removeRowsPlaceholder(){
    $('.placeholderdrop').each(function(){
        $(this).remove();
    })
}

/**
 *  Affiche la liste des images présentes dans le post
 */
function refreshImagesListInPost(){

    if (boolContentUpdatedAndNotSaved == true){
        sweetAlert("Res", "NO REFRESH");
    }
    else {
        // préparation requête ajax pour les images
        if ( $('#easycontent-grid').length ){
            var contenuEditor = $('#easycontent-grid').gridEditor('getHtml');
            var tabData = {grideditor_content: contenuEditor};
        }
        else {
            var tabData = {};
        }

        var json_data = JSON.stringify(tabData, null, 2);

        // exécution ajax
        getAjaxResponse('index.php?ajax=getImagesInGridEditor', json_data, function(msg) {
            $('#image-list').empty();
            if (msg.result == 'success')
            {
                if (msg.images.length > 0){

                    $.each(msg.images, function(idx, objImage) {
                        $.get("views/blocs/js-tmpl/image_detail_contenu.html", function(data){
                            data =  $.tmpl( data, {
                                'url_image' : objImage.src,
                                'alt_image' : objImage.alt,
                                'title_image' : objImage.title
                            }).html()

                            $('#image-list').append(data);
                        });
                    })
                }
                else{
                    $('#image-list').append('<div class="alert alert-info">Aucune image trouvée.</div>');
                }
            }
        })
    }
}


/**
 *  Affiche la liste des liens présents dans le post
 */
function refreshLiensListInPost(){

    // préparation requête ajax pour les images
    var contenuEditor = $('#easycontent-grid').gridEditor('getHtml');
    var tabData = {grideditor_content: contenuEditor};
    var json_data = JSON.stringify(tabData, null, 2);

    // exécution ajax
    getAjaxResponse('index.php?ajax=getLiensInGridEditor', json_data, function(msg) {
        $('#href-list').empty();
        if (msg.result == 'success')
        {
            if (msg.liens.length > 0){
                $.each(msg.liens, function(idx, objLien) {
                    $.get("views/blocs/js-tmpl/href_detail_contenu.html", function(data){
                        data =  $.tmpl( data, {
                            'href_lien' : objLien.href,
                            'rel_lien' : objLien.rel,
                            'target_lien' : objLien.target
                        }).html();

                        $('#href-list').append(data);
                    });
                })
            }
            else{
                $('#href-list').append('<div class="alert alert-info">Aucun lien trouvé.</div>');
            }
        }
    })
}




/**
 * Load random dummy image
 */
function loadRandomDummyImage(){
    getAjaxResponse('index.php?ajax=getRandomDummyImage', $(this).attr('data-select'), function(msg) {
        if (msg.result == 'success'){

            $('#draggable-random-images').empty();
            if (msg.images.length > 0){
                $.each(msg.images, function(idx, urlImage){
                    $('#draggable-random-images').append('<img src="'+ urlImage +'"  data-action="image" width="100%" class="btn btn-default ui-draggable ui-draggable-handle ui-sortable" />')
                })

                // reinit draggable car nouveau éléments
                initDraggableDroppable();
            }
        }
    })
}


/**
 *
 */
function loadAllPostsPages(){

    ////////////////////////////////////////
    // RECUPERATION LISTE DES PAGES
    ////////////////////////////////////////

    var urlCmsCible = $('#url_cible').val();
    $('#container-easycontent').css('display', 'none');

    // add loading to form
    $('body').loading();

    // préparation requête ajax
    var tabData = {url_cible: urlCmsCible};
    tabData['action'] = 'load_posts_pages';
    var json_data = JSON.stringify(tabData, null, 2);

    // vide le selecteur
    $('#select_list_elements').empty();

    getAjaxResponse(urlCmsCible, json_data, function(msg){

        $('body').loading('stop');

        if (msg.result == 'success'){

            if (msg.arborescence.posts){
                if (msg.arborescence.posts.length > 0){
                    var dataPosts = '<optgroup label="Posts">'
                    $.each(msg.arborescence.posts, function(idx, post){
                        dataPosts += '<option value="'+ post.ID +'">'+ post.post_title +' ['+ post.post_status +']</option>';
                    })
                    dataPosts += '</optgroup>';
                    $('#select_list_elements').append(dataPosts);
                }
            }

            if (msg.arborescence.pages){
                if (msg.arborescence.pages.length > 0){
                    var dataPosts = '<optgroup label="Pages">'
                    $.each(msg.arborescence.pages, function(idx, page){
                        dataPosts += '<option value="'+ page.ID +'">'+ page.post_title +' ['+ page.post_status +']</option>';
                    })
                    dataPosts += '</optgroup>';
                    $('#select_list_elements').append(dataPosts);
                }
            }


            $('#page_easycontenteditor_loadpage').slideDown();

            // refresh selectpicker des pages
            $('.selectpicker').selectpicker('refresh');

        }
        else {
            sweetAlert("Oops...", "Error in loadAllPostsPages", "error");
        }

    })


    // affiche ou non l'arborescence des pages (non pour post, oui pour page)
    $(document).on('change', '.post_type', function(){
        var type = ( $('input[name=post_type]:checked').val());
        if (type == 'page')     $('#liste-pages').slideDown();
        else                    $('#liste-pages').slideUp();
    })
}


/**
 *
 */
function loadAllCategories(){

    ////////////////////////////////////////
    // RECUPERATION LISTE DES CATEGORIES
    ////////////////////////////////////////

    var urlCmsCible = $('#url_cible').val();
    $('#container-easycontent').css('display', 'none');

    // add loading to form
    $('body').loading();

    // préparation requête ajax
    var tabData = {url_cible: urlCmsCible};
    tabData['action'] = 'load_categories';
    var json_data = JSON.stringify(tabData, null, 2);

    // vide le selecteur
    $('#select_list_categories').empty();

    getAjaxResponse(urlCmsCible, json_data, function(msg){

        $('body').loading('stop');

        if (msg.result == 'success'){

            if (msg.categories){
                if (msg.categories.length > 0){
                    var dataPosts = ''
                    $.each(msg.categories, function(idx, category){
                        dataPosts += '<option value="'+ category.id +'">'+ category.name +'</option>';
                    })
                    $('#select_list_categories').append(dataPosts);
                }
            }

            $('#page_easycontenteditor_loadpage').slideDown();

            // refresh selectpicker des pages
            $('.selectpicker').selectpicker('refresh');


        }
        else {
            sweetAlert("Oops...", "Error in loadAllCategories", "error");
        }
    })
}


/**
 * Update slug: update url post
 * @param msg
 */
function updateUrlField(msg){
    if (msg.url != ''  && msg.url !== undefined){
        $('#easycontent-url').val(msg.url);
        $('#easycontent-cms-link').attr('href', msg.url);
        $('#easycontent-slug').val(msg.new_slug);
    }
}

/**
 * @param msg
 */
function afterLoadCategory(msg){
    if (msg.result == 'success'){
        $('#easycontent-category-name').val(msg.category.name);

        $('#container-easycontent').slideDown();
    }
}

/**
 * easycontent editor: affichage du preview du post (article/page) dans wordpress
 */
function previewContentInCMS(btn){
    var urlCible = $('#easycontent-url').val();     // article to preview

    var form = btn.closest('form');

    var contenuEditeur = $('#easycontent-grid').gridEditor('getHtml');
    $('#preview_content').attr('value', contenuEditeur);
    form.attr('action', urlCible );
    form.submit();
}


/**
 * Active / désactive modal d'édition de contenu
 * @param val
 */
function setBoolContentUpdatedAndNotSaved(boolVal){
    if (boolVal == true)        var dataModal = 'no-modal';
    else                        var dataModal = 'modal'

    $('#btn_easycontent_optimiz_images').attr('data-toggle', dataModal);
    $('#btn_easycontent_optimiz_hrefs').attr('data-toggle', dataModal);
}


/**
 * @param btn
 */
function actionOnBtnOptimisationImagesHrefs(btn){
    if ( btn.attr('data-toggle') == 'no-modal'){
        // warning
        sweetAlert("Informations", "Veuillez enregistrer le contenu pour avoir accès à cette fonctionnalité", "warning");
    }
    else {
        // modal actives: refresh des données (la modale bootstrap se lance automatiquement au mêmem moment)
        if ( btn.hasClass('refresh_images'))                refreshImagesListInPost();
        else if ( btn.hasClass('shopify_refresh_images'))   shopifyRefreshProductImages();
        else if ( btn.hasClass('refresh_links'))            refreshLiensListInPost()
    }
}

$(document).ready(function () {

    /**
     * PUSH DATA - Générique
     *
     * pousse l'ensemble des données du formulaire en ajax
     *  - chaque field doit avoir un champ data-id de spécifié (key)
     *  - chaque field doit avoir un champ value de spécifié (value)
     */
    $(document).on('click', '.push_cms', function () {

        var btnClick = $(this);
        var form = $(this).closest('form');
        var allInputProcessed = false;
        var nbFilesUploadProcessing = 0;

        // où envoyer les data (racine du site)
        var dataUrl = btnClick.attr('data-url');
        if (dataUrl !== undefined && dataUrl != '')     var urlArticleCible = dataUrl;
        else                                            var urlArticleCible = $('#url_cible').val();

        console.log('push_cms TO ' + urlArticleCible);

        if (urlArticleCible != '') {
            // add loading to form
            form.loading();

            // get inputs in form
            form.each(function () {
                var elements = $(this).find(':input');

                // tableau des données à envoyer
                var tabData = {url_cible: urlArticleCible};
                if ($('#select_list_elements').length)                      tabData['id_post'] = $('#select_list_elements').val();
                else if ($('#select_list_categories').length)               tabData['id_post'] = $('#select_list_categories').val();
                else if ($('#shopify_select_list_elements').length)         tabData['id_post'] = $('#shopify_select_list_elements').val();

                // valeurs présentes dans le formulaire
                elements.each(function (){
                    if ($(this).attr('type') == 'radio' || $(this).attr('type') == 'checkbox') {
                        if ($(this).prop('checked')) {
                            tabData[$(this).attr('data-id')] = $(this).val();
                        }
                    }
                    else if ($(this).attr('type') == 'select') {
                        if ($(this).prop('selected')) {
                            tabData[$(this).attr('data-id')] = $(this).find(":selected").val();
                        }
                    }
                    else if ($(this).attr('type') == 'file') {

                        // file upload
                        var fileUpload = this.files[0];

                        // create files array if not exists
                        if (! Array.isArray(tabData['files']) )     tabData['files'] = [];

                        if (fileUpload) {
                            var filereader = new FileReader();

                            filereader.onloadstart = function (e){
                                nbFilesUploadProcessing += 1;
                            }
                            filereader.onload = function (e) {
                                nbFilesUploadProcessing -= 1;
                                var contents = e.target.result;

                                var fileInfos = {
                                    name: fileUpload.name,
                                    size: fileUpload.size,
                                    content: contents
                                };
                                // file name
                                tabData['files'].push(fileInfos);

                                // trigger ajax ?
                                triggerSendAjax(allInputProcessed, nbFilesUploadProcessing, tabData);
                            }

                            // launch file reader
                            filereader.readAsDataURL(fileUpload);
                        }
                    }
                    else {
                        // autres input
                        tabData[$(this).attr('data-id')] = $(this).val();

                        // cas particuliers
                        if ($(this).attr('data-id') == 'action' && $(this).val() == 'set_post_content') {
                            // contenu : on rajoute le contenu de grid editor
                            tabData['new_content'] = $('#easycontent-grid').gridEditor('getHtml');
                        }
                        else if ($(this).attr('data-id') == 'action' && $(this).val() == 'set_post_shortdescription') {
                            var newContent = getTinymceContent('easycontent-short_description');
                            tabData['new_short_description'] = newContent;
                        }
                        else if ($(this).attr('data-id') == 'action' && $(this).val() == 'set_shopify_product_update') {
                            tabData['shop_name'] = $('#url_cible').val();
                            tabData['new_description'] = getTinymceContent('product_description');
                        }
                        else if ($(this).attr('data-id') == 'action' && $(this).val() == 'shopify_add_shopname') {
                            tabData['shop_name'] = $('#url_cible').val();
                        }
                    }

                    allInputProcessed = true;
                });


                // trigger ajax ?
                triggerSendAjax(allInputProcessed, nbFilesUploadProcessing, tabData);



                //////////////////////////////////////
                // trigger ajax if all is computed
                ///////////////////////////////////////

                /**
                 * Trigger ajax request only if everything
                 * @param allInputProcessed
                 * @param nbFilesUploadProcessing
                 * @param tabData
                 */
                function triggerSendAjax(allInputProcessed, nbFilesUploadProcessing, tabData){
                    if (allInputProcessed == true && nbFilesUploadProcessing == 0){

                        // all is ok : data to JSON and send ajax
                        var json_data = JSON.stringify(tabData, null, 2);
                        sendAjax(json_data);
                    }
                }



                //////////////////////////
                // execute ajax when ok
                //////////////////////////

                function sendAjax(json_data){
                    console.log('Now fire ajax!')

                    // exécution ajax
                    getAjaxResponse(urlArticleCible, json_data, function (msg) {

                        // stop loading
                        form.loading('stop');

                        // lance une fonction supplémentaire si nécessaire : définie dans data-after
                        var traitementSupp = btnClick.attr('data-after');
                        if (traitementSupp !== undefined && traitementSupp != '') {
                            window[traitementSupp](msg);
                        }

                        // cas particulier : envoi contenu easycontent
                        if (tabData['action'] == 'set_post_content') {
                            if (msg.result == 'success') {
                                // réactive les modales
                                setBoolContentUpdatedAndNotSaved(false);

                                // réinject le contenu de wordpress dans le grid editor
                                easycontentGridInit(msg.content, false);
                            }
                        }

                        // add message under form
                        form.append('<div class="form-group result_push_cms"><div class="alert alert-' + msg.result + '">' + msg.message + '</div></div>');
                    })
                }
            });
        }
        else {
            // error
            sweetAlert("Oops...", "No URL to perform ajax!", "error");
        }

    });

})

$(document).ready(function(){

    // chargement des tinyMCE
    if ( $('#easycontent-short_description').length ){
        loadTinyMCE('#easycontent-short_description');
    }

   /**
    * load "GridEditor"
    */
   $(document).on('click', '.load_grid_editor', function(){
       loadGridEditor();
   })

   $(document).on('change', '#select_list_elements', function(){
       loadGridEditor();
   })

   /**
    * load arborescence
    */
   $(document).on('click', '.load_arborescence', function(){
       loadAllPostsPages();
   })

    $(document).on('click', '.load_categories', function(){
        loadAllCategories();
    })

    $(document).on('change', '#select_list_categories', function(){
        $('#btn-load-category').trigger('click');
    })



   /**
    *  Selection du texte + positionnement toolbar d'action
    */
   $(document).on('mouseup', '.ge-content.active', function(e){
       addEasycontentToolbarFromText();
   })

   /**
    * Search results for selected text
    */
   $(document).on('click', '.toolbar-menu-action span', function(){
       easycontentToolbarAction();
   });


   /**
    * Load random dummy image
    */
   $(document).on('click', '.load_random_images', function(){
       loadRandomDummyImage();
   })



   /**
    * easycontent editor: affichage du preview du post (article/page) dans wordpress
    */
   $(document).on('click', '.preview_content', function(){
       previewContentInCMS( $(this) );
   })


    /**
     * réactive l'optimisation images/href
     */
    $(document).on('click', '.push_easycontent_cms', function(){
        setBoolContentUpdatedAndNotSaved(false);
    })


    /**
     *  Warning si non modal
     */
    $(document).on('click', '#btn_easycontent_optimiz_images, #btn_easycontent_optimiz_hrefs', function(){
        actionOnBtnOptimisationImagesHrefs( $(this) );
    })

})
/**
 * Load redirections
 */
function loadRedirectionsFromSite(){

    // suppression des lignes de redirection
    removeNodeEverywhere('.ligne_table_redirection');

    /**
     *  Affichage des redirections présentes en base dans la page "Redirections"
     */
    if ($('#page-redirections').length > 0){

        var urlArticleCible = $('#url_cible').val();        // site where to push data
        $('body').loading();

        // préparation requête ajax
        var tabData = {url_cible: urlArticleCible};
        tabData['action'] = 'load_redirections';
        var json_data = JSON.stringify(tabData, null, 2);

        // exécution ajax
        getAjaxResponse(urlArticleCible, json_data, function(msg){
            $('body').loading('stop');
            if (msg.result == 'success'){
                if (msg.redirections.length > 0)
                {
                    // ajout de la liste des redirections
                    $("#redirection-table-ligne").tmpl(msg).appendTo("#table-redirections tbody");
                }
            }
            else {
                sweetAlert("Oops...", "Error loading redirections", "error");
            }
        })

    }
}



/**
 *  Redirections table: actions (active/désacrive/supprime)
 */
$(document).on('click', '.confirmAction', function(){

    var btnClick = $(this);

    // popup confirmation
    swal({
            title: "Are you sure?",
            text: "Do you really want to do this?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, just do it!",
            closeOnConfirm: true
        },
        function(){

            var dataUrl = btnClick.attr('data-url');
            if (dataUrl !== undefined && dataUrl != '')     var urlArticleCible = dataUrl;
            else                                            var urlArticleCible = $('#url_cible').val();

            // préparation requête ajax
            var tabData = {url_cible: urlArticleCible};
            tabData['action'] = btnClick.attr('data-action');
            tabData['id_redirection'] = btnClick.attr('data-id');

            // specifique
            var cms = btnClick.attr('data-cms');
            if (cms !== undefined && cms == 'shopify'){
                tabData['shop_name'] = $('#url_cible').val();
            }

            var json_data = JSON.stringify(tabData, null, 2);

            // exécution ajax
            getAjaxResponse(urlArticleCible, json_data, function(msg){

                if (msg.result == 'success'){
                    // additionnal action to do
                    var rowTr = $('#table-redirections #redirection-'+ tabData['id_redirection']);

                    if (tabData['action'] == 'redirection_enable')      rowTr.removeClass('danger').addClass('success');
                    if (tabData['action'] == 'redirection_disable')     rowTr.removeClass('success').addClass('danger');
                    if (tabData['action'] == 'redirection_delete')      rowTr.remove();
                }
                else {
                    sweetAlert("Oops...", "Error ajax: " + msg.message, "error");
                }

            })
        });

});
$(document).ready(function(){

    // affiche ou non l'arborescence des pages (non pour post, oui pour page)
    $(document).on('change', '.createpostpage_post_type', function(){
        var type = ( $('input[name=post_type]:checked').val());
        if (type == 'page')     $('#liste-pages').slideDown();
        else                    $('#liste-pages').slideUp();
    })


    // chargement des pages du site demandé
    $(document).on('click', '#btn_createpostpage_loadarborescence', function(){

        var urlArticleCible = $('#url_cible').val();        // site where to push data
        $('#easycontent-url').val(urlArticleCible);         // for push

        ////////////////////////////////////////
        // RECUPERATION LISTE DES PAGES
        ////////////////////////////////////////

        if (urlArticleCible != '')
        {
            $('body').loading();

            // préparation requête ajax
            var tabData = {url_cible: 'test'};
            tabData['action'] = 'load_posts_pages';
            var json_data = JSON.stringify(tabData, null, 2);

            getAjaxResponse(urlArticleCible, json_data, function(msg){
                $('body').loading('stop');

                if (msg.result == 'success'){
                    $('#select_post_parent').empty();
                    $('#select_post_parent').append('<option value="0">No parent</option>');
                    if (msg.arborescence.pages.length > 0){
                        $.each(msg.arborescence.pages, function(idx, page){
                            $('#select_post_parent').append('<option value="'+ page.ID +'">'+ page.post_title +' ['+ page.post_status +']</option>');
                        })
                    }
                }
                else {
                    sweetAlert("Oops...", "Error loading pages, please try again", "error");
                }
            })
        }

    })

})
$(document).ready(function(){

    $(document).on('click', '#load_site_options', function(){

        // load des informations du site au chargement de la page
        var urlArticleCible = $('#url_cible').val();        // site where to push data
        $('#easycontent-url').val(urlArticleCible);         // for push
        form = $(this).closest('form');

        // site selected?
        if (urlArticleCible != '')
        {
            // préparation requête ajax
            var tabData = {url_cible: urlArticleCible};
            tabData['action'] = 'load_site_options';
            var json_data = JSON.stringify(tabData, null, 2);

            $('body').loading();

            // exécution ajax
            getAjaxResponse(urlArticleCible, json_data, function(msg){

                if (msg.result == 'success'){
                    $('#easycontent_site_title').val(msg.site_title);
                    $('#easycontent_site_description').val(msg.site_description);

                    if (msg.site_is_public == "1")      $('#nosearchengine').prop('checked', false);
                    else                                $('#nosearchengine').prop('checked', true);
                }

                // stop loading
                $('body').loading('stop');
            })
        }

    })


})
/**
 *  Load all redirections
 */
function shopifyLoadAllRedirections(){

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val() };
    var json_data = JSON.stringify(tabData, null, 2);

    $('body').loading();

    // exécution ajax
    getAjaxResponse('index.php?ajax=shopifyGetRedirections', json_data, function(msg) {
        $('body').loading('stop');

        if (msg.result == 'success'){
            if (msg.redirections.length > 0)
            {
                // ajout de la liste des redirections
                $("#redirection-table-ligne").tmpl(msg).appendTo("#table-redirections tbody");
            }
        }
        else {
            sweetAlert("Oops...", "Error loading redirections", "error");
        }
    })
}


/**
 * Load products lists
 */
function shopifyLoadProducts(){

    $('#container-shopify').css('display', 'none');

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val() };
    var json_data = JSON.stringify(tabData, null, 2);

    $('body').loading();

    // exécution ajax
    getAjaxResponse('index.php?ajax=shopifyGetProducts', json_data, function(msg) {
        $('body').loading('stop');

        if (msg.result == 'success'){
            $('#shopify_shopify_select_list_elements').empty();

            if (msg.products.length > 0){
                //$("#shopify-table-produit").tmpl(msg).appendTo("#table-products tbody");

                var dataPosts = '<optgroup label="Products">'
                $.each(msg.products, function(idx, post){
                    dataPosts += '<option value="'+ post.id +'">'+ post.title +'</option>';
                })
                dataPosts += '</optgroup>';
                $('#shopify_select_list_elements').append(dataPosts);


                // show products list
                $('#page_easycontenteditor_loadpage').slideDown();

                // refresh selectpicker des pages
                $('.selectpicker').selectpicker('refresh');
            }
        }
        else {
            sweetAlert('Erreur ajax : ' + msg.message);
        }
    })
}

/**
 *
 */
function shopifyLoadProduct(){

    $('#container-shopify').css('display', 'none');

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val(), id_product: $('#shopify_select_list_elements').val() };
    var json_data = JSON.stringify(tabData, null, 2);

    $('body').loading();

    // exécution ajax
    getAjaxResponse('index.php?ajax=shopifyGetProduct', json_data, function(msg) {
        if (msg.result == 'success'){

            // set values
            $('#product_name').val(msg.product.title);
            $('#product_handle').val(msg.product.handle);
            $('#product_current_handle').val(msg.product.handle);
            $('#product_metatitle').val(msg.metas.meta_title);
            $('#product_metadescription').val(msg.metas.meta_description);
            $('#product_description').val(msg.product.body_html);

            // set tinymce for description
            if (msg.product.body_html == null)      msg.product.body_html = '';
            changeTinymceContent('product_description', msg.product.body_html);

            $('body').loading('stop');

            // déplie le contenu
            $('#container-shopify').slideDown();

            shopifyRefreshProductImages();

        }
    })
}


/**
 * Add image to shopify
 * @param type : url/computer
 */
function shopifyUploadImage(type){

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val(), id_product: $('#shopify_select_list_elements').val() };
    var json_data = JSON.stringify(tabData, null, 2);

    $('body').loading();

    // exécution ajax
    if (type == 'url')          var ajaxScript = 'shopifyAddProductImageUrl';
    else                        var ajaxScript = 'shopifyAddProductImageComputer';

    getAjaxResponse('index.php?ajax='+ajaxScript, json_data, function(msg) {
        $('body').loading('stop');

        if (msg.result == 'success'){
            shopifyRefreshProductImages();
        }
        else {
            sweetAlert("Oops...", "Error Adding product image", "error");
        }
    })

}



/**
 *
 */
function shopifyRefreshProductImages(){

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val(), id_product: $('#shopify_select_list_elements').val() };
    var json_data = JSON.stringify(tabData, null, 2);

    $('#image-list').loading();

    // exécution ajax
    getAjaxResponse('index.php?ajax=shopifyGetProduct', json_data, function(msg) {
        if (msg.result == 'success'){

            // load la liste des images
            $('#image-list').empty();
            if (msg.product.images.length > 0){
                $.each(msg.product.images, function(idx, objImage) {
                    $.get("views/blocs/js-tmpl/shopify_image_detail_contenu.html", function(data){
                        data =  $.tmpl( data, {
                            'id_image' : objImage.id,
                            'url_image' : objImage.src,
                            'alt_image' : objImage.metafield_alt,
                            'id_metafield_alt' : objImage.metafield_alt_id
                        }).html()

                        $('#image-list').append(data);
                    });
                })
            }
            else{
                $('#image-list').append('<div class="alert alert-info">Aucune image trouvée.</div>');
            }
        }

        $('#image-list').loading('stop');
    })
}


/**
 * @param idProductImage
 */
function shopifyDeleteProductImage(idProductImage){

    // préparation requête ajax pour les images
    var tabData = { shop_name: $('#url_cible').val(), id_product_image: idProductImage };
    var json_data = JSON.stringify(tabData, null, 2);

    $('body').loading();

    // exécution ajax
    getAjaxResponse('index.php?ajax=shopifyDeleteProductImage', json_data, function(msg) {
        $('body').loading('stop');

        if (msg.result == 'success'){
            shopifyRefreshProductImages();
        }
        else {
            sweetAlert("Oops...", "Error deleting product image", "error");
        }
    })
}




$(document).ready(function(){

    /**
     * Installation de l'application, depuis la page d'installation de la passerelle
     */
    $(document).on('click', '#form_install_shopify #send', function(){
        var urlBO = $('#url_backoffice').val();
        $('#form_install_shopify').attr('action', urlBO +'/api/auth');
        $('#form_install_shopify').submit();
    })



    // chargement des tinyMCE
    if ( $('#product_description').length ){
        loadTinyMCE('#product_description');
    }

    /** trigger : load all products on click **/
    $(document).on('click', '#shopify_load_products', function () {
        shopifyLoadProducts();
    })

    /** trigger : load a single product, with details **/
    $(document).on('click', '#btn-load-shopify-product', function () {
        shopifyLoadProduct();
    })

    $(document).on('change', '#shopify_select_list_elements', function () {
        shopifyLoadProduct();
    })

    $(document).on('click', '#shopify_load_redirections', function(){
        shopifyLoadAllRedirections();
    })

    $(document).on('click', '#btn_shopify_add_image_url', function(){
        shopifyUploadImage('url');
    })

    $(document).on('click', '#btn_shopify_add_image_computer', function(){
        shopifyUploadImage('computer');
    })

    $(document).on('click', '.btn_shopify_delete_product_image', function(){
        var idProductImage = $(this).attr('data-id-product-image');
        shopifyDeleteProductImage(idProductImage);
    })




})